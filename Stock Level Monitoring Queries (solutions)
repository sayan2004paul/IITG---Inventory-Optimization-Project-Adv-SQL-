# Stock Level Monitoring Queries (solutions)

1."What is the total inventory count per product category, and how is it distributed across warehouse regions?"
•Purpose: Identify which categories dominate inventory and regional distribution 


# total  inventory count per product category 


SELECT 
 f.cat_id, c.Category,SUM(f.Inventory_Level ) AS total_inventory 
 FROM final_fact f 
  JOIN 
   dim_cat c 
    USING(cat_id)
     GROUP BY 
        f.cat_id, c.Category
         ORDER BY 
           SUM(f.Inventory_Level )  DESC;



#  total inventory count per category across regions        
 
 SELECT 
 f.cat_id, c.Category,r.Region,SUM(f.Inventory_Level ) AS total_inventory 
 FROM final_fact f 
  JOIN 
   dim_cat c ON f.cat_id=c.cat_id
    JOIN dim_regions r ON f.reg_id=r.Reg_id
     GROUP BY 
        f.cat_id, c.Category,r.Region
         ORDER BY 
          Region ,Category , SUM(f.Inventory_Level ) DESC



2.Fast vs. Slow-Moving Products
"Which products have the highest and lowest sales-to-inventory ratios (indicating fast/slow movers)?"
•	Purpose: Spot potential overstocks (low ratio) and stockout risks (high ratio).


# BASED ON PRODUCT_ID 

WITH CTE AS (Select 
 Product_ID , (SUM(Units_Sold)/SUM(Inventory_Level)) AS stocking_ratio
FROM 
 final_fact 
  GROUP BY 
   Product_ID)
   
   SELECT 
    Product_ID , stocking_ratio,
     CASE 
      WHEN stocking_ratio>=(SELECT AVG(stocking_ratio) FROM CTE ) THEN 'fast-movers'
       WHEN stocking_ratio<(SELECT AVG(stocking_ratio) FROM CTE ) THEN 'slow-movers'
        END AS stock_category
         FROM CTE 
           ORDER BY 
           stocking_ratio DESC


# BASED ON PRODUCT CATEGORY 

WITH CTE AS (Select 
  c.Category , (SUM(f.Units_Sold)/SUM(f.Inventory_Level)) AS stocking_ratio
FROM 
 final_fact f 
  JOIN dim_cat c USING(cat_id)
  GROUP BY 
   c.Category)
   
   SELECT 
	 Category , stocking_ratio,
     CASE 
      WHEN stocking_ratio>=(SELECT AVG(stocking_ratio) FROM CTE ) THEN 'fast-movers'
       WHEN stocking_ratio<(SELECT AVG(stocking_ratio) FROM CTE ) THEN 'slow-movers'
        END AS stock_category
         FROM CTE 
          ORDER BY 
            stocking_ratio DESC

3. Basic Stockout Detection
"Which products currently have inventory levels below forecast  (immediate restock candidates)?"
 • Purpose: Flag urgent replenishment needs.


WITH ranked_inventory AS (
  SELECT 
    Product_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
),CTE1 AS (
SELECT 
  Product_ID,
  Inventory_Level,
   Demand_Forecast,
  Date
FROM 
  ranked_inventory
WHERE 
  rn = 1)
   SELECT 
  Product_ID ,
  Inventory_Level,
   Demand_Forecast,(Inventory_Level-Demand_Forecast) AS diff 
    FROM CTE1
     WHERE 
      Inventory_Level<Demand_Forecast


# potential chances of stockout (diff<avg_diff):

WITH ranked_inventory AS (
  SELECT 
    Product_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
),CTE1 AS (
SELECT 
  Product_ID,
  Inventory_Level,
   Demand_Forecast,
  Date
FROM 
  ranked_inventory
WHERE 
  rn = 1)
   SELECT 
  Product_ID ,
  Inventory_Level,
   Demand_Forecast,(Inventory_Level-Demand_Forecast) AS diff 
    FROM CTE1
     WHERE 
      (Inventory_Level-Demand_Forecast)<128.86 
      
4. Regional Stock Comparisons
"How does average inventory level compare between North, South, East, and West warehouses?"
 • Purpose: Reveal imbalances in regional stocking strategies.


 # region wise avg_inventory 

SELECT 
    r.Region,
     AVG(f.Inventory_Level) AS avg_inv
  FROM 
    final_fact f 
     JOIN 
      dim_regions r ON f.Reg_id=r.Reg_id
  GROUP BY 
      r.Region


# region and store wise avg_inventory 


SELECT 
 r.Region,f.Store_ID,AVG(f.Inventory_Level)  AS avg_inv
FROM 
 final_fact f 
  JOIN 
   dim_regions r 
    USING(Reg_ID)
     GROUP BY 
       r.Region,f.Store_ID
        ORDER BY 
         Region , avg_inv DESC

