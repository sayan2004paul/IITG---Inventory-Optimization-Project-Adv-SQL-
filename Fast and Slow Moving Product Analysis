Q1) Identify the Top 5 Fast-Moving Products Based on Sales Velocity
Write a solution to find the top 5 fast-moving products based on average units sold per day over the last 6 months.
For each product, calculate the sales velocity as (Total Units Sold / Number of Active Selling Days). Rank products in descending order of sales velocity and return the top 5.

 
 
 
 WITH last_6_months_data AS (
    SELECT 
        Product_ID,
        Date,
        Units_Sold
    FROM final_fact
    WHERE  Date >= DATE_SUB('2024-01-01', INTERVAL 6 MONTH))
,
product_sales_summary AS (
    SELECT
        Product_ID,
        SUM(Units_Sold) AS total_units_sold,
        COUNT(DISTINCT Date) AS active_selling_days,
        SUM(Units_Sold) * 1.0 / NULLIF(COUNT(DISTINCT Date), 0) AS sales_velocity
    FROM last_6_months_data
    GROUP BY Product_ID
)
SELECT 
    Product_ID,
    total_units_sold,
    active_selling_days,
    ROUND(sales_velocity, 2) AS sales_velocity
FROM product_sales_summary
ORDER BY sales_velocity DESC
LIMIT 5;







Q2) Detect the Bottom 5 Slow-Moving Products with High Inventory Levels
Write a solution to identify the 5 slowest-moving products that have high inventory levels. 
For each product, calculate the inventory-to-sales ratio as (Inventory Level / Units Sold) and return the ones with the highest ratio, excluding products with zero sales.


 
 
WITH latest_inventory AS (
    SELECT 
        Product_ID,
        Inventory_Level,
        ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
    FROM final_fact
),
clean_inventory AS (
    SELECT Product_ID, Inventory_Level
    FROM latest_inventory
    WHERE rn = 1
),
sales_summary AS (
    SELECT 
        Product_ID,
        SUM(Units_Sold) AS total_units_sold
    FROM final_fact
    GROUP BY Product_ID
),
combined AS (
    SELECT 
        s.Product_ID,
        c.Inventory_Level,
        s.total_units_sold,
        c.Inventory_Level / NULLIF(s.total_units_sold, 0) AS inventory_to_sales_ratio
    FROM sales_summary s
    JOIN clean_inventory c ON s.Product_ID = c.Product_ID
    WHERE s.total_units_sold > 0
)
SELECT 
    Product_ID,
    Inventory_Level,
    total_units_sold,
    ROUND(inventory_to_sales_ratio, 4) AS inventory_to_sales_ratio
FROM combined
ORDER BY inventory_to_sales_ratio DESC
LIMIT 5;


