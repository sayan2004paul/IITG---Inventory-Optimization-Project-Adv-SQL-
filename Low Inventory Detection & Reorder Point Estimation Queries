                                         ~ Low Inventory Detection & Reorder Point Estimation Queries  ~


1) 	What is the current inventory level for each product (SKU) across all stores?
    Purpose: Build the baseline view of inventory quantity by Product_ID and Store_ID.




WITH ranked_inventory AS (
  SELECT 
    Product_ID,Store_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
)
SELECT 
 Date ,
   Store_ID  ,Product_ID ,  Inventory_Level

FROM 
  ranked_inventory
WHERE rn=1
 ORDER BY Inventory_Level DESC
 



2) Which products currently have inventory below a fixed reorder point threshold (30 % of Avg Inventory Level)?
   Purpose: Identify simple low-inventory candidates using a static threshold.




WITH ranked_inventory AS (
  SELECT 
    Product_ID,Store_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
)
SELECT 
Date,Product_ID ,Inventory_Level
  FROM 
   ranked_inventory
     WHERE 
      Inventory_Level<(0.3*256)
       AND rn=1
   







3) What is the reorder point for each SKU, calculated as the average daily demand over the past 30 days multiplied by the lead time (e.g., 7 days)?
   Purpose: Estimate a dynamic reorder point based on moving average demand.




WITH past_30_sale AS ( SELECT 
Date,Product_ID ,
  SUM(Units_Sold) as total_qnt
   FROM 
    final_fact 
    WHERE 
     Date >= '2024-01-01' - INTERVAL '30'DAY 
      GROUP BY 
       Date,Product_ID),
       
       avg_demand AS  (SELECT 
        Product_ID, 
         AVG(total_qnt) AS avg_daily_demand
          FROM 
           past_30_sale
            GROUP BY 
             Product_ID)
             
             SELECT 
              Product_ID, 
               avg_daily_demand
                ,7 AS lead_time_days
                ,ROUND(avg_daily_demand*7,2) AS reorder_point
                 FROM
                  avg_demand 





 




