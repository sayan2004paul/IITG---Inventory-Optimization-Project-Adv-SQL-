                                         ~ Low Inventory Detection & Reorder Point Estimation Queries  ~


1) 	What is the current inventory level for each product (SKU) across all stores?
    Purpose: Build the baseline view of inventory quantity by Product_ID and Store_ID.




WITH ranked_inventory AS (
  SELECT 
    Product_ID,Store_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
)
SELECT 
 Date ,
   Store_ID  ,Product_ID ,  Inventory_Level

FROM 
  ranked_inventory
WHERE rn=1
 ORDER BY Inventory_Level DESC
 



2) Which products currently have inventory below a fixed reorder point threshold (30 % of Avg Inventory Level)?
   Purpose: Identify simple low-inventory candidates using a static threshold.




WITH ranked_inventory AS (
  SELECT 
    Product_ID,Store_ID,
    Inventory_Level,Demand_Forecast,
    Date,
    ROW_NUMBER() OVER (PARTITION BY Product_ID ORDER BY Date DESC) AS rn
  FROM 
    final_fact
)
SELECT 
Date,Product_ID ,Inventory_Level
  FROM 
   ranked_inventory
     WHERE 
      Inventory_Level<(0.3*256)
       AND rn=1
   







3) What is the reorder point for each SKU, calculated as the average daily demand over the past 30 days multiplied by the lead time (e.g., 7 days)?
   Purpose: Estimate a dynamic reorder point based on moving average demand.


WITH past_30_days AS (
  SELECT 
    Product_ID,
    SUM(Units_Sold) AS total_units,
    COUNT(DISTINCT Date) AS active_days,
    SUM(Units_Sold)/COUNT(DISTINCT Date) AS avg_daily_demand
  FROM final_fact
  WHERE Date >= '2024-01-01' - INTERVAL 30 DAY
  GROUP BY Product_ID
) 
  ,reorder AS ( SELECT 
    Product_ID,
    avg_daily_demand,
    7 AS lead_time_days,
    ROUND(avg_daily_demand * 7, 2) AS reorder_point
  FROM past_30_days
  ),
  latest_inventory AS (
  SELECT 
    Product_ID,
    SUM(Inventory_Level) AS total_inv
  FROM final_fact
  WHERE Date = (SELECT MAX(Date) FROM final_fact)
   GROUP BY 
    Product_ID
)
SELECT 
  r.Product_ID,
  r.avg_daily_demand,
  r.reorder_point,
  l.total_inv
FROM reorder r
JOIN latest_inventory l ON r.Product_ID = l.Product_ID;

  
  














4) 	Which SKUs have inventory levels below their dynamically calculated reorder points (per SKU)?
    Purpose: Detect true low-inventory risk based on calculated reorder needs.




WITH past_30_days AS (
  SELECT 
    Product_ID,
    SUM(Units_Sold) AS total_units,
    COUNT(DISTINCT Date) AS active_days,
    SUM(Units_Sold)/COUNT(DISTINCT Date) AS avg_daily_demand
  FROM final_fact
  WHERE Date >= '2024-01-01' - INTERVAL 30 DAY
  GROUP BY Product_ID
) 
  ,reorder AS ( SELECT 
    Product_ID,
    avg_daily_demand,
    7 AS lead_time_days,
    ROUND(avg_daily_demand * 7, 2) AS reorder_point
  FROM past_30_days
  ),
  latest_inventory AS (
  SELECT 
    Product_ID,
    SUM(Inventory_Level) AS total_inv
  FROM final_fact
  WHERE Date = (SELECT MAX(Date) FROM final_fact)
   GROUP BY 
    Product_ID
)
SELECT 
  r.Product_ID,
  r.avg_daily_demand,
  r.reorder_point,
  l.total_inv
FROM reorder r
JOIN latest_inventory l ON r.Product_ID = l.Product_ID
 WHERE 
  l.total_inv<r.reorder_point

  
  
